Unbound variable `make-counter'
Unbound variable `with-values'
too few expressions for `if`
Invalid Syntax (#:syntax-error Prohibit-one-arg cannot be used with one argument. display 3)
Invalid Syntax (#:syntax-error Prohibit-one-arg cannot be used with one argument. display 3)
repr is not a function
Unbound variable `Symbol(#:gentemp)'
Unbound variable `Symbol(#:match-pattern)'
Unbound variable `Symbol(#:else)'
Unbound variable `Symbol(#:else)'
Unbound variable `else'
number 1 is not a function
number 1 is not a function
number 1 is not a function
syntax: internal error, ellipis not transformed
input is not defined
input is not defined
input is not defined
input is not defined
Error: Unbound variable `uunless'
Error: ZONK
Error: ZONK
Unbound variable `any'
this.factor is not a function
Cannot find module '@jcubic/lips/.././dist/function bootstrap(interpreter) {
    const ext = options.bootstrap ? options.bootstrap : 'std.xcb';
    const list = [`./dist/${bootstrap}`];
    function read(name) {
        var path;
        try {
            path = require.resolve(`./${name}`);
        } catch (e) {
            try {
                path = require.resolve(`../${name}`);
            } catch (e) {
                path = require.resolve(`@jcubic/lips/../${name}`);
            }
        }
        return readCode(path);
    }
    return (function next() {
        var name = list.shift();
        if (name) {
            const code = read(name);
            return run(code, interpreter, false, env.__parent__, true).then(next);
        } else {
            return Promise.resolve();
        }
    })();
}'
Require stack:
- /mnt/ssd/projects/jcubic/lips/repo/bin/lips.js
Cannot find module '@jcubic/lips/.././dist/function bootstrap(interpreter) {
    const ext = options.bootstrap ? options.bootstrap : 'std.xcb';
    const list = [`./dist/${bootstrap}`];
    function read(name) {
        var path;
        try {
            path = require.resolve(`./${name}`);
        } catch (e) {
            try {
                path = require.resolve(`../${name}`);
            } catch (e) {
                path = require.resolve(`@jcubic/lips/../${name}`);
            }
        }
        return readCode(path);
    }
    return (function next() {
        var name = list.shift();
        if (name) {
            const code = read(name);
            return run(code, interpreter, false, env.__parent__, true).then(next);
        } else {
            return Promise.resolve();
        }
    })();
}'
Require stack:
- /mnt/ssd/projects/jcubic/lips/repo/bin/lips.js
Cannot find module '@jcubic/lips/.././dist/function bootstrap(interpreter) {
    const ext = options.bootstrap ? options.bootstrap : 'std.xcb';
    const list = [`./dist/${bootstrap}`];
    function read(name) {
        var path;
        try {
            path = require.resolve(`./${name}`);
        } catch (e) {
            try {
                path = require.resolve(`../${name}`);
            } catch (e) {
                path = require.resolve(`@jcubic/lips/../${name}`);
            }
        }
        return readCode(path);
    }
    return (function next() {
        var name = list.shift();
        if (name) {
            const code = read(name);
            return run(code, interpreter, false, env.__parent__, true).then(next);
        } else {
            return Promise.resolve();
        }
    })();
}'
Require stack:
- /mnt/ssd/projects/jcubic/lips/repo/bin/lips.js
Cannot find module '@jcubic/lips/.././dist/function bootstrap(interpreter) {
    const ext = options.bootstrap ? options.bootstrap : 'std.xcb';
    const list = [`./dist/${bootstrap}`];
    function read(name) {
        var path;
        try {
            path = require.resolve(`./${name}`);
        } catch (e) {
            try {
                path = require.resolve(`../${name}`);
            } catch (e) {
                path = require.resolve(`@jcubic/lips/../${name}`);
            }
        }
        return readCode(path);
    }
    return (function next() {
        var name = list.shift();
        if (name) {
            const code = read(name);
            return run(code, interpreter, false, env.__parent__, true).then(next);
        } else {
            return Promise.resolve();
        }
    })();
}'
Require stack:
- /mnt/ssd/projects/jcubic/lips/repo/bin/lips.js
Cannot find module '@jcubic/lips/.././dist/function bootstrap(interpreter) {
    const ext = options.bootstrap ? options.bootstrap : 'std.xcb';
    const list = [`./dist/${bootstrap}`];
    function read(name) {
        var path;
        try {
            path = require.resolve(`./${name}`);
        } catch (e) {
            try {
                path = require.resolve(`../${name}`);
            } catch (e) {
                path = require.resolve(`@jcubic/lips/../${name}`);
            }
        }
        return readCode(path);
    }
    return (function next() {
        var name = list.shift();
        if (name) {
            const code = read(name);
            return run(code, interpreter, false, env.__parent__, true).then(next);
        } else {
            return Promise.resolve();
        }
    })();
}'
Require stack:
- /mnt/ssd/projects/jcubic/lips/repo/bin/lips.js
Cannot find module '@jcubic/lips/.././dist/function bootstrap(interpreter) {
    const ext = options.bootstrap ? options.bootstrap : 'std.xcb';
    const list = [`./dist/${bootstrap}`];
    function read(name) {
        var path;
        try {
            path = require.resolve(`./${name}`);
        } catch (e) {
            try {
                path = require.resolve(`../${name}`);
            } catch (e) {
                path = require.resolve(`@jcubic/lips/../${name}`);
            }
        }
        return readCode(path);
    }
    return (function next() {
        var name = list.shift();
        if (name) {
            const code = read(name);
            return run(code, interpreter, false, env.__parent__, true).then(next);
        } else {
            return Promise.resolve();
        }
    })();
}'
Require stack:
- /mnt/ssd/projects/jcubic/lips/repo/bin/lips.js
ENOENT: no such file or directory, open 'jest'
Cannot find module '@jcubic/lips/.././dist/function bootstrap(interpreter) {
    const ext = options.bootstrap ? options.bootstrap : 'std.xcb';
    const list = [`./dist/${bootstrap}`];
    if (!quiet) {
        console.log(`bootstrap with ${bootstrap}`);
    }
    function read(name) {
        var path;
        try {
            path = require.resolve(`./${name}`);
        } catch (e) {
            try {
                path = require.resolve(`../${name}`);
            } catch (e) {
                path = require.resolve(`@jcubic/lips/../${name}`);
            }
        }
        return readCode(path);
    }
    return (function next() {
        var name = list.shift();
        if (name) {
            const code = read(name);
            return run(code, interpreter, false, env.__parent__, true).then(next);
        } else {
            return Promise.resolve();
        }
    })();
}'
Require stack:
- /mnt/ssd/projects/jcubic/lips/repo/bin/lips.js
list->array: can't convert improper list
Unbound variable `rec'
not enough elements
Cannot read property 'length' of undefined
Invalid regular expression: /^Error:/: Stack overflow
Expecting pair, got number in expression `caaadr`
Expecting pair, got number in expression `caaadr`
Expecting pair, got nil in expression `caaadr`
Expecting pair, got nil in expression `caaadr`
Expecting pair, got nil in expression `caaadr`
Expecting pair, got nil in expression `caaadr`
Expecting pair, got nil in expression `caaadr`
Cannot assign to read only property '__value__' of object '[object Object]'
Unbound variable `1.__value__'
Cannot read property 'setRawMode' of null
sxml-unquote: Can't use outside of sxml
Maximum call stack size exceeded in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs)))) in macro: (() ((_ arg ...) (list->array (list arg ...)))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: (() ((_ "step" arg ...) (join " " (vector->list (vector (repr arg) ...)))) ((_ message arg ...) (error (format "~a ~a" message (_ "step" arg ...))))) in macro: ((a d r) ((_ r obj) obj) ((_ a xs ...) (car (cxr xs ...))) ((_ d xs ...) (cdr (cxr xs ...))) ((_ . xs) (syntax-error "Malformed cxr:" (cxr . xs))))
