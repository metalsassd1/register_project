var ervy = require('ervy');
var fs = require('fs');

const scatterData = [];

for (let i = 1; i < 17; i++) {
    i < 6 ? scatterData.push({ key: 'A', value: [i, i], style: ervy.fg('red', '*') })
        : scatterData.push({ key: 'A', value: [i, 6], style: ervy.fg('red', '*') });
}

scatterData.push({ key: 'B', value: [2, 6], style: ervy.fg('blue', '# '), side: 2 });
scatterData.push({ key: 'C', value: [6, 9], style: ervy.bg('cyan', 2) });

function writeFile(fname, data) {
    fs.writeFile(fname, data, function(err) {
        if (err) {
            console.log(err);
        }
    });
}


writeFile('__tests__/ervy-plot-02',  ervy.scatter(scatterData, { legendGap: 18, width: 15 }));


;(function(ervy) {
     var chars = ['#', '+', '*', '#', '@', '%'];
 var colors = ['red', 'green', 'yellow', 'blue', 'magenta', 'cyan', 'white'];
 var commands = {
     scatter: function(...args) {
         if (args[0] === 'demo') {
             // Scatter
             const scatterData = [];

             for (let i = 1; i < 17; i++) {
                 i < 6 ? scatterData.push({ key: 'A', value: [i, i], style: ervy.fg('red', '*') })
                   : scatterData.push({ key: 'A', value: [i, 6], style: ervy.fg('red', '*') });
             }

             scatterData.push({ key: 'B', value: [2, 6], style: ervy.fg('blue', '# '), side: 2 });
             scatterData.push({ key: 'C', value: [6, 9], style: ervy.bg('cyan', 2) });

             return ervy.scatter(scatterData, { legendGap: 18, width: 15 });
         }
         var data = args.map((x, i) => {
             var [key, value, style] = x.split(':');
             if (style) {
                 if (style.length === 1) {
                     style = ervy.fg(colors[i], style);
                 } else {
                     style = ervy.fg(style, chars[i]);
                 }
             } else {
                 style = chars[i];
             }
             return value.split(';').map(x => {
                 return {key, value: x.split(',').map(x => +x), style};
             });
         });
         data = [].concat.apply([], data);
         return ervy.scatter(data, {width: 15, legendGap: 18});
     }
 };
    writeFile('__tests__/ervy-plot-01', commands.scatter('Foo:0,0;1,1;2,2;3,2;4,2;5,6;6,6:#'));
})(ervy);

